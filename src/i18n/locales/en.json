{
  "cli": {
    "analysis": {
      "starting": "🔍 Analyzing Next.js project...",
      "detectingStructure": "📁 Detecting project structure...",
      "generatingHealthReport": "🏠 Generating project health report...",
      "scanningFiles": "📋 Scanning files...",
      "analyzingBundles": "📦 Analyzing bundle information...",
      "buildingDependencyGraph": "🕸️  Building dependency graph...",
      "generatingRecommendations": "💡 Generating recommendations...",
      "complete": "✅ Analysis complete!",
      "failed": "❌ Analysis failed:",
      "initializingAnalysis": "- Initializing analysis...",
      "analysisCompleted": "✔ Analysis completed!",
      "generatingReports": "- Generating reports...",
      "reportsGenerated": "✔ Reports generated!"
    },
    "apiScan": {
      "title": "🚀 API Routes Analysis",
      "totalApiFiles": "• Total API files: {{count}}",
      "unusedRoutes": "• Unused routes: {{count}}",
      "activeRoutes": "• Active routes: {{count}}",
      "generatedReports": "📁 Generated reports:",
      "reportFile": "• {{file}}",
      "failed": "API scan failed"
    },
    "config": {
      "initComplete": "🎉 Initialization complete!",
      "nextSteps": "Next steps:",
      "reviewConfig": "   1. Review and customize .vibealive/config.js if needed",
      "runAnalyze": "   2. Run `vibealive analyze` to start analyzing your project",
      "cleanupCancelled": "ℹ️  Cleanup cancelled.",
      "cleanupComplete": "🎉 Cleanup completed!",
      "removedVibeAliveDir": "✅ Removed .vibealive directory",
      "noFilesToCleanup": "🔍 No VibeAlive files found to cleanup.",
      "cleanupConfirmation": "⚠️  This will permanently delete the entire .vibealive directory and {{count}} report(s). Continue? [y/N]: "
    },
    "errors": {
      "analysisError": "❌ Analysis failed:",
      "configInitFailed": "❌ Failed to initialize config:",
      "cleanupFailed": "❌ Failed to cleanup:",
      "fileCheckFailed": "❌ File check failed:",
      "directoryScanFailed": "❌ Directory scan failed:",
      "componentScanFailed": "❌ Component scan failed:",
      "apiScanFailed": "❌ API scan failed:",
      "mcpServerStartFailed": "❌ Failed to start MCP server:",
      "cleanupDirFailed": "❌ Failed to remove .vibealive directory: {{error}}"
    },
    "validation": {
      "unsupportedFormat": "Unsupported format: {{format}}",
      "invalidFormats": "Invalid output formats: {{formats}}. Supported: json, md, tsv, csv",
      "portMustBeNumber": "Port must be a number."
    }
  },
  "reports": {
    "markdown": {
      "title": "# Next.js Code Analysis Report",
      "executiveSummary": "## 📊 Executive Summary",
      "project": "- **Project**: {{project}}",
      "nextVersion": "- **Next.js Version**: {{version}}",
      "routerType": "- **Router Type**: {{routerType}}",
      "analysisDate": "- **Analysis Date**: {{date}}",
      "analysisTime": "- **Analysis Time**: {{time}}",
      "totalFiles": "- **Total Files Analyzed**: {{count}}",
      "totalComponents": "- **Total Components**: {{count}}",
      "totalApiEndpoints": "- **Total API Endpoints**: {{count}}",
      "keyFindings": "## 🎯 Key Findings",
      "unusedFiles": "### Unused Files",
      "unusedFilesCount": "- **Count**: {{count}}",
      "potentialSavings": "- **Potential Bundle Size Savings**: {{size}}",
      "deadCode": "### Dead Code",
      "deadCodeCount": "- **Count**: {{count}}",
      "redundantApis": "### Redundant APIs",
      "redundantApisCount": "- **Count**: {{count}}",
      "fileAnalysis": "## 🗂️ File Analysis",
      "unusedFilesSection": "### Unused Files ({{count}})",
      "deadCodeSection": "### Dead Code ({{count}})",
      "apiAnalysis": "## 🔌 API Analysis",
      "unusedApisSection": "### Unused APIs ({{count}})",
      "recommendations": "## 💡 Recommendations",
      "dependencyGraph": "## 🏗️ Dependency Graph",
      "entryPoints": "### Entry Points",
      "orphanedComponents": "### Orphaned Components ({{count}})",
      "circularDependencies": "### Circular Dependencies ({{count}})",
      "cycle": "#### Cycle {{index}}",
      "safeDeletions": "## 📈 Safe Deletions",
      "safeDeletionsDescription": "The following files can be safely deleted with high confidence:",
      "generatedBy": "*Report generated by Next.js Analyzer on {{date}}*"
    },
    "health": {
      "title": "## 🏥 Next.js Project Health Score: {{score}}/100",
      "strengths": "### ✅ Strengths",
      "improvements": "### 🔧 Areas for Improvement",
      "routingPatterns": "### 🛤️  Advanced Routing Patterns",
      "ecosystemPackages": "### 📦 Next.js Ecosystem Packages",
      "setupIssues": "### ⚠️  Setup Issues & Recommendations",
      "criticalIssues": "#### 🚨 Critical Issues ({{count}})",
      "warnings": "#### ⚠️  Warnings ({{count}})",
      "optimizationOpportunities": "#### ℹ️  Optimization Opportunities ({{count}})",
      "recommendations": "Recommendations:"
    },
    "bundle": {
      "title": "## 📦 Bundle Size Analysis",
      "currentImpact": "### Current Bundle Impact",
      "totalBundleSize": "- **Total Bundle Size**: {{size}}",
      "gzippedSize": "- **Gzipped Size**: {{size}}",
      "unusedCodeSize": "- **Unused Code Size**: {{size}} ({{percentage}}% of total)",
      "potentialSavings": "### Potential Savings",
      "rawSizeReduction": "- **Raw Size Reduction**: {{size}}",
      "gzippedReduction": "- **Gzipped Reduction**: {{size}}",
      "bundleSizeImprovement": "- **Bundle Size Improvement**: {{percentage}}%",
      "topUnusedModules": "### Top Unused Modules by Size",
      "noUnusedModules": "_No unused modules detected._",
      "optimizationRecommendations": "### Bundle Optimization Recommendations",
      "noRecommendations": "_No specific bundle recommendations available._"
    },
    "tables": {
      "fileTableHeaders": "| File | Type | Confidence | Reasons |",
      "fileTableSeparator": "|------|------|------------|---------|",
      "apiTableHeaders": "| API Path | Methods | File | Confidence | Reasons |",
      "apiTableSeparator": "|----------|---------|------|------------|---------|",
      "routingPatternHeaders": "| Pattern Type | Path | Purpose | Status |",
      "routingPatternSeparator": "|--------------|------|---------|--------|",
      "packageHeaders": "| Package | Version | Setup Status | Purpose |",
      "packageSeparator": "|---------|---------|--------------|---------|",
      "noFilesFound": "_No files found in this category._",
      "noApisFound": "_No APIs found in this category._"
    },
    "csv": {
      "headers": {
        "type": "Type",
        "path": "Path",
        "usageCount": "UsageCount",
        "classification": "Classification",
        "confidence": "Confidence",
        "reasons": "Reasons"
      }
    }
  },
  "status": {
    "complete": "✅",
    "partial": "⚠️",
    "missing": "❌",
    "misconfigured": "🔧",
    "unknown": "❓",
    "valid": "✅",
    "invalid": "❌"
  },
  "mcp": {
    "server": {
      "starting": "🚀 Starting MCP HTTP Server with v2025-03-26 standards...",
      "running": "✅ MCP Server running on http://localhost:{{port}}",
      "modernEndpoint": "🔗 Modern endpoint: http://localhost:{{port}}/mcp",
      "legacyEndpoint": "🔗 Legacy endpoint: http://localhost:{{port}}/sse",
      "protocol": "📋 Protocol: v2025-03-26 with backwards compatibility",
      "security": "🛡️  Security: {{status}}",
      "cors": "🌐 CORS: Enabled for browser clients",
      "clientConnecting": "📡 Legacy SSE client connecting (deprecated)",
      "startingStdio": "🚀 Starting MCP Server with stdio transport...",
      "readyStdio": "✅ MCP Server ready on stdio transport"
    }
  }
}